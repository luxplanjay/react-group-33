{"ast":null,"code":"/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n\n    var enableSchedulerDebugging = false;\n    var enableProfiling = false;\n    var frameYieldMs = 5;\n\n    function push(heap, node) {\n      var index = heap.length;\n      heap.push(node);\n      siftUp(heap, node, index);\n    }\n\n    function peek(heap) {\n      return heap.length === 0 ? null : heap[0];\n    }\n\n    function pop(heap) {\n      if (heap.length === 0) {\n        return null;\n      }\n\n      var first = heap[0];\n      var last = heap.pop();\n\n      if (last !== first) {\n        heap[0] = last;\n        siftDown(heap, last, 0);\n      }\n\n      return first;\n    }\n\n    function siftUp(heap, node, i) {\n      var index = i;\n\n      while (index > 0) {\n        var parentIndex = index - 1 >>> 1;\n        var parent = heap[parentIndex];\n\n        if (compare(parent, node) > 0) {\n          // The parent is larger. Swap positions.\n          heap[parentIndex] = node;\n          heap[index] = parent;\n          index = parentIndex;\n        } else {\n          // The parent is smaller. Exit.\n          return;\n        }\n      }\n    }\n\n    function siftDown(heap, node, i) {\n      var index = i;\n      var length = heap.length;\n      var halfLength = length >>> 1;\n\n      while (index < halfLength) {\n        var leftIndex = (index + 1) * 2 - 1;\n        var left = heap[leftIndex];\n        var rightIndex = leftIndex + 1;\n        var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n        if (compare(left, node) < 0) {\n          if (rightIndex < length && compare(right, left) < 0) {\n            heap[index] = right;\n            heap[rightIndex] = node;\n            index = rightIndex;\n          } else {\n            heap[index] = left;\n            heap[leftIndex] = node;\n            index = leftIndex;\n          }\n        } else if (rightIndex < length && compare(right, node) < 0) {\n          heap[index] = right;\n          heap[rightIndex] = node;\n          index = rightIndex;\n        } else {\n          // Neither child is smaller. Exit.\n          return;\n        }\n      }\n    }\n\n    function compare(a, b) {\n      // Compare sort index first, then task id.\n      var diff = a.sortIndex - b.sortIndex;\n      return diff !== 0 ? diff : a.id - b.id;\n    } // TODO: Use symbols?\n\n\n    var ImmediatePriority = 1;\n    var UserBlockingPriority = 2;\n    var NormalPriority = 3;\n    var LowPriority = 4;\n    var IdlePriority = 5;\n\n    function markTaskErrored(task, ms) {}\n    /* eslint-disable no-var */\n\n\n    var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\n    if (hasPerformanceNow) {\n      var localPerformance = performance;\n\n      exports.unstable_now = function () {\n        return localPerformance.now();\n      };\n    } else {\n      var localDate = Date;\n      var initialTime = localDate.now();\n\n      exports.unstable_now = function () {\n        return localDate.now() - initialTime;\n      };\n    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n    // Math.pow(2, 30) - 1\n    // 0b111111111111111111111111111111\n\n\n    var maxSigned31BitInt = 1073741823; // Times out immediately\n\n    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\n    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;\n    var NORMAL_PRIORITY_TIMEOUT = 5000;\n    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\n    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\n    var taskQueue = [];\n    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\n    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\n\n    var currentTask = null;\n    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\n    var isPerformingWork = false;\n    var isHostCallbackScheduled = false;\n    var isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\n    var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\n    var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\n    var localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\n    var isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\n    function advanceTimers(currentTime) {\n      // Check for tasks that are no longer delayed and add them to the queue.\n      var timer = peek(timerQueue);\n\n      while (timer !== null) {\n        if (timer.callback === null) {\n          // Timer was cancelled.\n          pop(timerQueue);\n        } else if (timer.startTime <= currentTime) {\n          // Timer fired. Transfer to the task queue.\n          pop(timerQueue);\n          timer.sortIndex = timer.expirationTime;\n          push(taskQueue, timer);\n        } else {\n          // Remaining timers are pending.\n          return;\n        }\n\n        timer = peek(timerQueue);\n      }\n    }\n\n    function handleTimeout(currentTime) {\n      isHostTimeoutScheduled = false;\n      advanceTimers(currentTime);\n\n      if (!isHostCallbackScheduled) {\n        if (peek(taskQueue) !== null) {\n          isHostCallbackScheduled = true;\n          requestHostCallback(flushWork);\n        } else {\n          var firstTimer = peek(timerQueue);\n\n          if (firstTimer !== null) {\n            requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n          }\n        }\n      }\n    }\n\n    function flushWork(hasTimeRemaining, initialTime) {\n      isHostCallbackScheduled = false;\n\n      if (isHostTimeoutScheduled) {\n        // We scheduled a timeout but it's no longer needed. Cancel it.\n        isHostTimeoutScheduled = false;\n        cancelHostTimeout();\n      }\n\n      isPerformingWork = true;\n      var previousPriorityLevel = currentPriorityLevel;\n\n      try {\n        if (enableProfiling) {\n          try {\n            return workLoop(hasTimeRemaining, initialTime);\n          } catch (error) {\n            if (currentTask !== null) {\n              var currentTime = exports.unstable_now();\n              markTaskErrored(currentTask, currentTime);\n              currentTask.isQueued = false;\n            }\n\n            throw error;\n          }\n        } else {\n          // No catch in prod code path.\n          return workLoop(hasTimeRemaining, initialTime);\n        }\n      } finally {\n        currentTask = null;\n        currentPriorityLevel = previousPriorityLevel;\n        isPerformingWork = false;\n      }\n    }\n\n    function workLoop(hasTimeRemaining, initialTime) {\n      var currentTime = initialTime;\n      advanceTimers(currentTime);\n      currentTask = peek(taskQueue);\n\n      while (currentTask !== null && !enableSchedulerDebugging) {\n        if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n          // This currentTask hasn't expired, and we've reached the deadline.\n          break;\n        }\n\n        var callback = currentTask.callback;\n\n        if (typeof callback === 'function') {\n          currentTask.callback = null;\n          currentPriorityLevel = currentTask.priorityLevel;\n          var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n          var continuationCallback = callback(didUserCallbackTimeout);\n          currentTime = exports.unstable_now();\n\n          if (typeof continuationCallback === 'function') {\n            currentTask.callback = continuationCallback;\n          } else {\n            if (currentTask === peek(taskQueue)) {\n              pop(taskQueue);\n            }\n          }\n\n          advanceTimers(currentTime);\n        } else {\n          pop(taskQueue);\n        }\n\n        currentTask = peek(taskQueue);\n      } // Return whether there's additional work\n\n\n      if (currentTask !== null) {\n        return true;\n      } else {\n        var firstTimer = peek(timerQueue);\n\n        if (firstTimer !== null) {\n          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n        }\n\n        return false;\n      }\n    }\n\n    function unstable_runWithPriority(priorityLevel, eventHandler) {\n      switch (priorityLevel) {\n        case ImmediatePriority:\n        case UserBlockingPriority:\n        case NormalPriority:\n        case LowPriority:\n        case IdlePriority:\n          break;\n\n        default:\n          priorityLevel = NormalPriority;\n      }\n\n      var previousPriorityLevel = currentPriorityLevel;\n      currentPriorityLevel = priorityLevel;\n\n      try {\n        return eventHandler();\n      } finally {\n        currentPriorityLevel = previousPriorityLevel;\n      }\n    }\n\n    function unstable_next(eventHandler) {\n      var priorityLevel;\n\n      switch (currentPriorityLevel) {\n        case ImmediatePriority:\n        case UserBlockingPriority:\n        case NormalPriority:\n          // Shift down to normal priority\n          priorityLevel = NormalPriority;\n          break;\n\n        default:\n          // Anything lower than normal priority should remain at the current level.\n          priorityLevel = currentPriorityLevel;\n          break;\n      }\n\n      var previousPriorityLevel = currentPriorityLevel;\n      currentPriorityLevel = priorityLevel;\n\n      try {\n        return eventHandler();\n      } finally {\n        currentPriorityLevel = previousPriorityLevel;\n      }\n    }\n\n    function unstable_wrapCallback(callback) {\n      var parentPriorityLevel = currentPriorityLevel;\n      return function () {\n        // This is a fork of runWithPriority, inlined for performance.\n        var previousPriorityLevel = currentPriorityLevel;\n        currentPriorityLevel = parentPriorityLevel;\n\n        try {\n          return callback.apply(this, arguments);\n        } finally {\n          currentPriorityLevel = previousPriorityLevel;\n        }\n      };\n    }\n\n    function unstable_scheduleCallback(priorityLevel, callback, options) {\n      var currentTime = exports.unstable_now();\n      var startTime;\n\n      if (typeof options === 'object' && options !== null) {\n        var delay = options.delay;\n\n        if (typeof delay === 'number' && delay > 0) {\n          startTime = currentTime + delay;\n        } else {\n          startTime = currentTime;\n        }\n      } else {\n        startTime = currentTime;\n      }\n\n      var timeout;\n\n      switch (priorityLevel) {\n        case ImmediatePriority:\n          timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n          break;\n\n        case UserBlockingPriority:\n          timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n          break;\n\n        case IdlePriority:\n          timeout = IDLE_PRIORITY_TIMEOUT;\n          break;\n\n        case LowPriority:\n          timeout = LOW_PRIORITY_TIMEOUT;\n          break;\n\n        case NormalPriority:\n        default:\n          timeout = NORMAL_PRIORITY_TIMEOUT;\n          break;\n      }\n\n      var expirationTime = startTime + timeout;\n      var newTask = {\n        id: taskIdCounter++,\n        callback: callback,\n        priorityLevel: priorityLevel,\n        startTime: startTime,\n        expirationTime: expirationTime,\n        sortIndex: -1\n      };\n\n      if (startTime > currentTime) {\n        // This is a delayed task.\n        newTask.sortIndex = startTime;\n        push(timerQueue, newTask);\n\n        if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n          // All tasks are delayed, and this is the task with the earliest delay.\n          if (isHostTimeoutScheduled) {\n            // Cancel an existing timeout.\n            cancelHostTimeout();\n          } else {\n            isHostTimeoutScheduled = true;\n          } // Schedule a timeout.\n\n\n          requestHostTimeout(handleTimeout, startTime - currentTime);\n        }\n      } else {\n        newTask.sortIndex = expirationTime;\n        push(taskQueue, newTask); // wait until the next time we yield.\n\n        if (!isHostCallbackScheduled && !isPerformingWork) {\n          isHostCallbackScheduled = true;\n          requestHostCallback(flushWork);\n        }\n      }\n\n      return newTask;\n    }\n\n    function unstable_pauseExecution() {}\n\n    function unstable_continueExecution() {\n      if (!isHostCallbackScheduled && !isPerformingWork) {\n        isHostCallbackScheduled = true;\n        requestHostCallback(flushWork);\n      }\n    }\n\n    function unstable_getFirstCallbackNode() {\n      return peek(taskQueue);\n    }\n\n    function unstable_cancelCallback(task) {\n      // remove from the queue because you can't remove arbitrary nodes from an\n      // array based heap, only the first one.)\n      task.callback = null;\n    }\n\n    function unstable_getCurrentPriorityLevel() {\n      return currentPriorityLevel;\n    }\n\n    var isMessageLoopRunning = false;\n    var scheduledHostCallback = null;\n    var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n    // thread, like user events. By default, it yields multiple times per frame.\n    // It does not attempt to align with frame boundaries, since most tasks don't\n    // need to be frame aligned; for those that do, use requestAnimationFrame.\n\n    var frameInterval = frameYieldMs;\n    var startTime = -1;\n\n    function shouldYieldToHost() {\n      var timeElapsed = exports.unstable_now() - startTime;\n\n      if (timeElapsed < frameInterval) {\n        // The main thread has only been blocked for a really short amount of time;\n        // smaller than a single frame. Don't yield yet.\n        return false;\n      } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n      return true;\n    }\n\n    function requestPaint() {}\n\n    function forceFrameRate(fps) {\n      if (fps < 0 || fps > 125) {\n        // Using console['error'] to evade Babel and ESLint\n        console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n        return;\n      }\n\n      if (fps > 0) {\n        frameInterval = Math.floor(1000 / fps);\n      } else {\n        // reset the framerate\n        frameInterval = frameYieldMs;\n      }\n    }\n\n    var performWorkUntilDeadline = function () {\n      if (scheduledHostCallback !== null) {\n        var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n        // has been blocked.\n\n        startTime = currentTime;\n        var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n        // error can be observed.\n        //\n        // Intentionally not using a try-catch, since that makes some debugging\n        // techniques harder. Instead, if `scheduledHostCallback` errors, then\n        // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n        var hasMoreWork = true;\n\n        try {\n          hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n        } finally {\n          if (hasMoreWork) {\n            // If there's more work, schedule the next message event at the end\n            // of the preceding one.\n            schedulePerformWorkUntilDeadline();\n          } else {\n            isMessageLoopRunning = false;\n            scheduledHostCallback = null;\n          }\n        }\n      } else {\n        isMessageLoopRunning = false;\n      } // Yielding to the browser will give it a chance to paint, so we can\n\n    };\n\n    var schedulePerformWorkUntilDeadline;\n\n    if (typeof localSetImmediate === 'function') {\n      // Node.js and old IE.\n      // There's a few reasons for why we prefer setImmediate.\n      //\n      // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n      // (Even though this is a DOM fork of the Scheduler, you could get here\n      // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n      // https://github.com/facebook/react/issues/20756\n      //\n      // But also, it runs earlier which is the semantic we want.\n      // If other browsers ever implement it, it's better to use it.\n      // Although both of these would be inferior to native scheduling.\n      schedulePerformWorkUntilDeadline = function () {\n        localSetImmediate(performWorkUntilDeadline);\n      };\n    } else if (typeof MessageChannel !== 'undefined') {\n      // DOM and Worker environments.\n      // We prefer MessageChannel because of the 4ms setTimeout clamping.\n      var channel = new MessageChannel();\n      var port = channel.port2;\n      channel.port1.onmessage = performWorkUntilDeadline;\n\n      schedulePerformWorkUntilDeadline = function () {\n        port.postMessage(null);\n      };\n    } else {\n      // We should only fallback here in non-browser environments.\n      schedulePerformWorkUntilDeadline = function () {\n        localSetTimeout(performWorkUntilDeadline, 0);\n      };\n    }\n\n    function requestHostCallback(callback) {\n      scheduledHostCallback = callback;\n\n      if (!isMessageLoopRunning) {\n        isMessageLoopRunning = true;\n        schedulePerformWorkUntilDeadline();\n      }\n    }\n\n    function requestHostTimeout(callback, ms) {\n      taskTimeoutID = localSetTimeout(function () {\n        callback(exports.unstable_now());\n      }, ms);\n    }\n\n    function cancelHostTimeout() {\n      localClearTimeout(taskTimeoutID);\n      taskTimeoutID = -1;\n    }\n\n    var unstable_requestPaint = requestPaint;\n    var unstable_Profiling = null;\n    exports.unstable_IdlePriority = IdlePriority;\n    exports.unstable_ImmediatePriority = ImmediatePriority;\n    exports.unstable_LowPriority = LowPriority;\n    exports.unstable_NormalPriority = NormalPriority;\n    exports.unstable_Profiling = unstable_Profiling;\n    exports.unstable_UserBlockingPriority = UserBlockingPriority;\n    exports.unstable_cancelCallback = unstable_cancelCallback;\n    exports.unstable_continueExecution = unstable_continueExecution;\n    exports.unstable_forceFrameRate = forceFrameRate;\n    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\n    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\n    exports.unstable_next = unstable_next;\n    exports.unstable_pauseExecution = unstable_pauseExecution;\n    exports.unstable_requestPaint = unstable_requestPaint;\n    exports.unstable_runWithPriority = unstable_runWithPriority;\n    exports.unstable_scheduleCallback = unstable_scheduleCallback;\n    exports.unstable_shouldYield = shouldYieldToHost;\n    exports.unstable_wrapCallback = unstable_wrapCallback;\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/GOIT/React/1 неделя/goit-react-hw-01-components/node_modules/scheduler/cjs/scheduler.development.js"],"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","enableSchedulerDebugging","enableProfiling","frameYieldMs","push","heap","node","index","length","siftUp","peek","pop","first","last","siftDown","i","parentIndex","parent","compare","halfLength","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","ms","hasPerformanceNow","performance","now","localPerformance","exports","unstable_now","localDate","Date","initialTime","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localSetImmediate","setImmediate","isInputPending","navigator","scheduling","undefined","bind","advanceTimers","currentTime","timer","callback","startTime","expirationTime","handleTimeout","requestHostCallback","flushWork","firstTimer","requestHostTimeout","hasTimeRemaining","cancelHostTimeout","previousPriorityLevel","workLoop","error","isQueued","shouldYieldToHost","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","isMessageLoopRunning","scheduledHostCallback","taskTimeoutID","frameInterval","timeElapsed","requestPaint","forceFrameRate","fps","console","Math","floor","performWorkUntilDeadline","hasMoreWork","schedulePerformWorkUntilDeadline","MessageChannel","channel","port","port2","port1","onmessage","postMessage","unstable_requestPaint","unstable_Profiling","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","unstable_forceFrameRate","unstable_shouldYield","registerInternalModuleStop"],"mappings":"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","sourcesContent":["/**\n * @license React\n * scheduler.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var enableSchedulerDebugging = false;\nvar enableProfiling = false;\nvar frameYieldMs = 5;\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  return heap.length === 0 ? null : heap[0];\n}\nfunction pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n\n  var first = heap[0];\n  var last = heap.pop();\n\n  if (last !== first) {\n    heap[0] = last;\n    siftDown(heap, last, 0);\n  }\n\n  return first;\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (index > 0) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n  var halfLength = length >>> 1;\n\n  while (index < halfLength) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (compare(left, node) < 0) {\n      if (rightIndex < length && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (rightIndex < length && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n\nvar hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\n\nif (hasPerformanceNow) {\n  var localPerformance = performance;\n\n  exports.unstable_now = function () {\n    return localPerformance.now();\n  };\n} else {\n  var localDate = Date;\n  var initialTime = localDate.now();\n\n  exports.unstable_now = function () {\n    return localDate.now() - initialTime;\n  };\n} // Max 31 bit integer. The max integer size in V8 for 32-bit systems.\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrance.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false; // Capture local references to native APIs, in case a polyfill overrides them.\n\nvar localSetTimeout = typeof setTimeout === 'function' ? setTimeout : null;\nvar localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : null;\nvar localSetImmediate = typeof setImmediate !== 'undefined' ? setImmediate : null; // IE and Node.js + jsdom\n\nvar isInputPending = typeof navigator !== 'undefined' && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = exports.unstable_now();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = exports.unstable_now();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = exports.unstable_now();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar isMessageLoopRunning = false;\nvar scheduledHostCallback = null;\nvar taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main\n// thread, like user events. By default, it yields multiple times per frame.\n// It does not attempt to align with frame boundaries, since most tasks don't\n// need to be frame aligned; for those that do, use requestAnimationFrame.\n\nvar frameInterval = frameYieldMs;\nvar startTime = -1;\n\nfunction shouldYieldToHost() {\n  var timeElapsed = exports.unstable_now() - startTime;\n\n  if (timeElapsed < frameInterval) {\n    // The main thread has only been blocked for a really short amount of time;\n    // smaller than a single frame. Don't yield yet.\n    return false;\n  } // The main thread has been blocked for a non-negligible amount of time. We\n\n\n  return true;\n}\n\nfunction requestPaint() {\n\n}\n\nfunction forceFrameRate(fps) {\n  if (fps < 0 || fps > 125) {\n    // Using console['error'] to evade Babel and ESLint\n    console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');\n    return;\n  }\n\n  if (fps > 0) {\n    frameInterval = Math.floor(1000 / fps);\n  } else {\n    // reset the framerate\n    frameInterval = frameYieldMs;\n  }\n}\n\nvar performWorkUntilDeadline = function () {\n  if (scheduledHostCallback !== null) {\n    var currentTime = exports.unstable_now(); // Keep track of the start time so we can measure how long the main thread\n    // has been blocked.\n\n    startTime = currentTime;\n    var hasTimeRemaining = true; // If a scheduler task throws, exit the current browser task so the\n    // error can be observed.\n    //\n    // Intentionally not using a try-catch, since that makes some debugging\n    // techniques harder. Instead, if `scheduledHostCallback` errors, then\n    // `hasMoreWork` will remain true, and we'll continue the work loop.\n\n    var hasMoreWork = true;\n\n    try {\n      hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);\n    } finally {\n      if (hasMoreWork) {\n        // If there's more work, schedule the next message event at the end\n        // of the preceding one.\n        schedulePerformWorkUntilDeadline();\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  } // Yielding to the browser will give it a chance to paint, so we can\n};\n\nvar schedulePerformWorkUntilDeadline;\n\nif (typeof localSetImmediate === 'function') {\n  // Node.js and old IE.\n  // There's a few reasons for why we prefer setImmediate.\n  //\n  // Unlike MessageChannel, it doesn't prevent a Node.js process from exiting.\n  // (Even though this is a DOM fork of the Scheduler, you could get here\n  // with a mix of Node.js 15+, which has a MessageChannel, and jsdom.)\n  // https://github.com/facebook/react/issues/20756\n  //\n  // But also, it runs earlier which is the semantic we want.\n  // If other browsers ever implement it, it's better to use it.\n  // Although both of these would be inferior to native scheduling.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetImmediate(performWorkUntilDeadline);\n  };\n} else if (typeof MessageChannel !== 'undefined') {\n  // DOM and Worker environments.\n  // We prefer MessageChannel because of the 4ms setTimeout clamping.\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = performWorkUntilDeadline;\n\n  schedulePerformWorkUntilDeadline = function () {\n    port.postMessage(null);\n  };\n} else {\n  // We should only fallback here in non-browser environments.\n  schedulePerformWorkUntilDeadline = function () {\n    localSetTimeout(performWorkUntilDeadline, 0);\n  };\n}\n\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\nfunction requestHostTimeout(callback, ms) {\n  taskTimeoutID = localSetTimeout(function () {\n    callback(exports.unstable_now());\n  }, ms);\n}\n\nfunction cancelHostTimeout() {\n  localClearTimeout(taskTimeoutID);\n  taskTimeoutID = -1;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"]},"metadata":{},"sourceType":"script"}
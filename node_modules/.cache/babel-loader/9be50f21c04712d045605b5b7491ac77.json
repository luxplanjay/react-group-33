{"ast":null,"code":"/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n    }\n\n    var ReactVersion = '18.1.0'; // -----------------------------------------------------------------------------\n\n    var enableScopeAPI = false; // Experimental Create Event Handle API.\n\n    var enableCacheElement = false;\n    var enableTransitionTracing = false; // No known bugs, but needs performance testing\n\n    var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n    // stuff. Intended to enable React core members to more easily debug scheduling\n    // issues in DEV builds.\n\n    var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n    // ATTENTION\n\n    var REACT_ELEMENT_TYPE = Symbol.for('react.element');\n    var REACT_PORTAL_TYPE = Symbol.for('react.portal');\n    var REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\n    var REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\n    var REACT_PROFILER_TYPE = Symbol.for('react.profiler');\n    var REACT_PROVIDER_TYPE = Symbol.for('react.provider');\n    var REACT_CONTEXT_TYPE = Symbol.for('react.context');\n    var REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\n    var REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\n    var REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\n    var REACT_MEMO_TYPE = Symbol.for('react.memo');\n    var REACT_LAZY_TYPE = Symbol.for('react.lazy');\n    var REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\n    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable !== 'object') {\n        return null;\n      }\n\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n\n      return null;\n    }\n    /**\n     * Keeps track of the current dispatcher.\n     */\n\n\n    var ReactCurrentDispatcher = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    /**\n     * Keeps track of the current batch's configuration such as how long an update\n     * should suspend for if it needs to.\n     */\n\n    var ReactCurrentBatchConfig = {\n      transition: null\n    };\n    var ReactCurrentActQueue = {\n      current: null,\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n      isBatchingLegacy: false,\n      didScheduleLegacyUpdate: false\n    };\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n\n    var ReactCurrentOwner = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    var ReactDebugCurrentFrame = {};\n    var currentExtraStackFrame = null;\n\n    function setExtraStackFrame(stack) {\n      {\n        currentExtraStackFrame = stack;\n      }\n    }\n\n    {\n      ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n        {\n          currentExtraStackFrame = stack;\n        }\n      }; // Stack implementation injected by the current renderer.\n\n\n      ReactDebugCurrentFrame.getCurrentStack = null;\n\n      ReactDebugCurrentFrame.getStackAddendum = function () {\n        var stack = ''; // Add an extra top frame while an element is being validated\n\n        if (currentExtraStackFrame) {\n          stack += currentExtraStackFrame;\n        } // Delegate to the injected renderer-specific implementation\n\n\n        var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n        if (impl) {\n          stack += impl() || '';\n        }\n\n        return stack;\n      };\n    }\n    var ReactSharedInternals = {\n      ReactCurrentDispatcher: ReactCurrentDispatcher,\n      ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n      ReactCurrentOwner: ReactCurrentOwner\n    };\n    {\n      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n      ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n    } // by calls to these methods by a Babel plugin.\n    //\n    // In PROD (or in packages without access to React internals),\n    // they are left as they are instead.\n\n    function warn(format) {\n      {\n        {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          printWarning('warn', format, args);\n        }\n      }\n    }\n\n    function error(format) {\n      {\n        {\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          printWarning('error', format, args);\n        }\n      }\n    }\n\n    function printWarning(level, format, args) {\n      // When changing this logic, you might want to also\n      // update consoleWithStackDev.www.js as well.\n      {\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n        if (stack !== '') {\n          format += '%s';\n          args = args.concat([stack]);\n        } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n        var argsWithFormat = args.map(function (item) {\n          return String(item);\n        }); // Careful: RN currently depends on this prefix\n\n        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n        // breaks IE9: https://github.com/facebook/react/issues/13610\n        // eslint-disable-next-line react-internal/no-production-logging\n\n        Function.prototype.apply.call(console[level], console, argsWithFormat);\n      }\n    }\n\n    var didWarnStateUpdateForUnmountedComponent = {};\n\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + \".\" + callerName;\n\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n\n        error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n    /**\n     * This is the abstract API for an update queue.\n     */\n\n\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    var assign = Object.assign;\n    var emptyObject = {};\n    {\n      Object.freeze(emptyObject);\n    }\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n      // renderer.\n\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n\n    Component.prototype.isReactComponent = {};\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.setState = function (partialState, callback) {\n      if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n        throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n      }\n\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n\n\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n\n\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n\n    function ComponentDummy() {}\n\n    ComponentDummy.prototype = Component.prototype;\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context; // If a component has string refs, we will assign a different object later.\n\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n    assign(pureComponentPrototype, Component.prototype);\n    pureComponentPrototype.isPureReactComponent = true; // an immutable object with a single mutable value\n\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n\n    var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\n    function isArray(a) {\n      return isArrayImpl(a);\n    }\n    /*\n     * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n     * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n     *\n     * The functions in this module will throw an easier-to-understand,\n     * easier-to-debug exception with a clear errors message message explaining the\n     * problem. (Instead of a confusing exception thrown inside the implementation\n     * of the `value` object).\n     */\n    // $FlowFixMe only called in DEV, so void return is not possible.\n\n\n    function typeName(value) {\n      {\n        // toStringTag is needed for namespaced types like Temporal.Instant\n        var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n        var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n        return type;\n      }\n    } // $FlowFixMe only called in DEV, so void return is not possible.\n\n\n    function willCoercionThrow(value) {\n      {\n        try {\n          testStringCoercion(value);\n          return false;\n        } catch (e) {\n          return true;\n        }\n      }\n    }\n\n    function testStringCoercion(value) {\n      // If you ended up here by following an exception call stack, here's what's\n      // happened: you supplied an object or symbol value to React (as a prop, key,\n      // DOM attribute, CSS property, string ref, etc.) and when React tried to\n      // coerce it to a string using `'' + value`, an exception was thrown.\n      //\n      // The most common types that will cause this exception are `Symbol` instances\n      // and Temporal objects like `Temporal.Instant`. But any object that has a\n      // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n      // exception. (Library authors do this to prevent users from using built-in\n      // numeric operators like `+` or comparison operators like `>=` because custom\n      // methods are needed to perform accurate arithmetic or comparison.)\n      //\n      // To fix the problem, coerce this object or symbol value to a string before\n      // passing it to React. The most reliable way is usually `String(value)`.\n      //\n      // To find which value is throwing, check the browser or debugger console.\n      // Before this exception was thrown, there should be `console.error` output\n      // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n      // problem and how that type was used: key, atrribute, input value prop, etc.\n      // In most cases, this console output also shows the component and its\n      // ancestor components where the exception happened.\n      //\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      return '' + value;\n    }\n\n    function checkKeyStringCoercion(value) {\n      {\n        if (willCoercionThrow(value)) {\n          error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n          return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n        }\n      }\n    }\n\n    function getWrappedName(outerType, innerType, wrapperName) {\n      var displayName = outerType.displayName;\n\n      if (displayName) {\n        return displayName;\n      }\n\n      var functionName = innerType.displayName || innerType.name || '';\n      return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n    } // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\n    function getContextName(type) {\n      return type.displayName || 'Context';\n    } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\n    function getComponentNameFromType(type) {\n      if (type == null) {\n        // Host root, text node or just invalid type.\n        return null;\n      }\n\n      {\n        if (typeof type.tag === 'number') {\n          error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n        }\n      }\n\n      if (typeof type === 'function') {\n        return type.displayName || type.name || null;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'Fragment';\n\n        case REACT_PORTAL_TYPE:\n          return 'Portal';\n\n        case REACT_PROFILER_TYPE:\n          return 'Profiler';\n\n        case REACT_STRICT_MODE_TYPE:\n          return 'StrictMode';\n\n        case REACT_SUSPENSE_TYPE:\n          return 'Suspense';\n\n        case REACT_SUSPENSE_LIST_TYPE:\n          return 'SuspenseList';\n      }\n\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_CONTEXT_TYPE:\n            var context = type;\n            return getContextName(context) + '.Consumer';\n\n          case REACT_PROVIDER_TYPE:\n            var provider = type;\n            return getContextName(provider._context) + '.Provider';\n\n          case REACT_FORWARD_REF_TYPE:\n            return getWrappedName(type, type.render, 'ForwardRef');\n\n          case REACT_MEMO_TYPE:\n            var outerName = type.displayName || null;\n\n            if (outerName !== null) {\n              return outerName;\n            }\n\n            return getComponentNameFromType(type.type) || 'Memo';\n\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n\n              try {\n                return getComponentNameFromType(init(payload));\n              } catch (x) {\n                return null;\n              }\n            }\n          // eslint-disable-next-line no-fallthrough\n        }\n      }\n\n      return null;\n    }\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n    {\n      didWarnAboutStringRefs = {};\n    }\n\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n\n    function defineKeyPropWarningGetter(props, displayName) {\n      var warnAboutAccessingKey = function () {\n        {\n          if (!specialPropKeyWarningShown) {\n            specialPropKeyWarningShown = true;\n            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        }\n      };\n\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, 'key', {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n\n    function defineRefPropWarningGetter(props, displayName) {\n      var warnAboutAccessingRef = function () {\n        {\n          if (!specialPropRefWarningShown) {\n            specialPropRefWarningShown = true;\n            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n          }\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n\n    function warnIfStringRefCannotBeAutoConverted(config) {\n      {\n        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n          if (!didWarnAboutStringRefs[componentName]) {\n            error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n            didWarnAboutStringRefs[componentName] = true;\n          }\n        }\n      }\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, instanceof check\n     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} props\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} owner\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @internal\n     */\n\n\n    var ReactElement = function (type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // self and source are DEV only properties.\n\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        }); // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n\n\n    function createElement(type, config, children) {\n      var propName; // Reserved names are extracted\n\n      var props = {};\n      var key = null;\n      var ref = null;\n      var self = null;\n      var source = null;\n\n      if (config != null) {\n        if (hasValidRef(config)) {\n          ref = config.ref;\n          {\n            warnIfStringRefCannotBeAutoConverted(config);\n          }\n        }\n\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        }\n\n        self = config.__self === undefined ? null : config.__self;\n        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n\n      var childrenLength = arguments.length - 2;\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      } // Resolve default props\n\n\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n\n      {\n        if (key || ref) {\n          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n          if (key) {\n            defineKeyPropWarningGetter(props, displayName);\n          }\n\n          if (ref) {\n            defineRefPropWarningGetter(props, displayName);\n          }\n        }\n      }\n      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n    }\n\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n      return newElement;\n    }\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n\n\n    function cloneElement(element, config, children) {\n      if (element === null || element === undefined) {\n        throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n      }\n\n      var propName; // Original props are copied\n\n      var props = assign({}, element.props); // Reserved names are extracted\n\n      var key = element.key;\n      var ref = element.ref; // Self is preserved since the owner is preserved.\n\n      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n      // transpiler, and the original source is probably a better indicator of the\n      // true owner.\n\n      var source = element._source; // Owner will be preserved, unless ref is overridden\n\n      var owner = element._owner;\n\n      if (config != null) {\n        if (hasValidRef(config)) {\n          // Silently steal the ref from the parent.\n          ref = config.ref;\n          owner = ReactCurrentOwner.current;\n        }\n\n        if (hasValidKey(config)) {\n          {\n            checkKeyStringCoercion(config.key);\n          }\n          key = '' + config.key;\n        } // Remaining properties override existing props\n\n\n        var defaultProps;\n\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n\n      var childrenLength = arguments.length - 2;\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n\n        props.children = childArray;\n      }\n\n      return ReactElement(element.type, key, ref, self, source, owner, props);\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a ReactElement.\n     * @final\n     */\n\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = key.replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n\n    function escapeUserProvidedKey(text) {\n      return text.replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n    /**\n     * Generate a key string that identifies a element within a set.\n     *\n     * @param {*} element A element that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n\n\n    function getElementKey(element, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof element === 'object' && element !== null && element.key != null) {\n        // Explicit key\n        {\n          checkKeyStringCoercion(element.key);\n        }\n        return escape('' + element.key);\n      } // Implicit key determined by the index in the set\n\n\n      return index.toString(36);\n    }\n\n    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n      var type = typeof children;\n\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n\n      var invokeCallback = false;\n\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n\n        }\n      }\n\n      if (invokeCallback) {\n        var _child = children;\n        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows:\n\n        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n        if (isArray(mappedChild)) {\n          var escapedChildKey = '';\n\n          if (childKey != null) {\n            escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n          }\n\n          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n            return c;\n          });\n        } else if (mappedChild != null) {\n          if (isValidElement(mappedChild)) {\n            {\n              // The `if` statement here prevents auto-disabling of the safe\n              // coercion ESLint rule, so we must manually disable it below.\n              // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n              if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                checkKeyStringCoercion(mappedChild.key);\n              }\n            }\n            mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n            // traverseAllChildren used to do for objects as children\n            escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n            mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n          }\n\n          array.push(mappedChild);\n        }\n\n        return 1;\n      }\n\n      var child;\n      var nextName;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n      if (isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getElementKey(child, i);\n          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === 'function') {\n          var iterableChildren = children;\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === iterableChildren.entries) {\n              if (!didWarnAboutMaps) {\n                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n              }\n\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(iterableChildren);\n          var step;\n          var ii = 0;\n\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getElementKey(child, ii++);\n            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n          }\n        } else if (type === 'object') {\n          // eslint-disable-next-line react-internal/safe-string-coercion\n          var childrenString = String(children);\n          throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n        }\n      }\n\n      return subtreeCount;\n    }\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n     *\n     * The provided mapFunction(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n\n\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n\n      var result = [];\n      var count = 0;\n      mapIntoArray(children, result, '', '', function (child) {\n        return func.call(context, child, count++);\n      });\n      return result;\n    }\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrencount\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n\n\n    function countChildren(children) {\n      var n = 0;\n      mapChildren(children, function () {\n        n++; // Don't return anything\n      });\n      return n;\n    }\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n\n\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      mapChildren(children, function () {\n        forEachFunc.apply(this, arguments); // Don't return anything.\n      }, forEachContext);\n    }\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n     */\n\n\n    function toArray(children) {\n      return mapChildren(children, function (child) {\n        return child;\n      }) || [];\n    }\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n\n\n    function onlyChild(children) {\n      if (!isValidElement(children)) {\n        throw new Error('React.Children.only expected to receive a single React element child.');\n      }\n\n      return children;\n    }\n\n    function createContext(defaultValue) {\n      // TODO: Second argument used to be an optional `calculateChangedBits`\n      // function. Warn to reserve for future use?\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        // As a workaround to support multiple concurrent renderers, we categorize\n        // some renderers as primary and others as secondary. We only expect\n        // there to be two concurrent renderers at most: React Native (primary) and\n        // Fabric (secondary); React DOM (primary) and React ART (secondary).\n        // Secondary renderers store their context values on separate fields.\n        _currentValue: defaultValue,\n        _currentValue2: defaultValue,\n        // Used to track how many concurrent renderers this context currently\n        // supports within in a single renderer. Such as parallel server rendering.\n        _threadCount: 0,\n        // These are circular\n        Provider: null,\n        Consumer: null,\n        // Add these to use same hidden class in VM as ServerContext\n        _defaultValue: null,\n        _globalName: null\n      };\n      context.Provider = {\n        $$typeof: REACT_PROVIDER_TYPE,\n        _context: context\n      };\n      var hasWarnedAboutUsingNestedContextConsumers = false;\n      var hasWarnedAboutUsingConsumerProvider = false;\n      var hasWarnedAboutDisplayNameOnConsumer = false;\n      {\n        // A separate object, but proxies back to the original context object for\n        // backwards compatibility. It has a different $$typeof, so we can properly\n        // warn for the incorrect usage of Context as a Consumer.\n        var Consumer = {\n          $$typeof: REACT_CONTEXT_TYPE,\n          _context: context\n        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n        Object.defineProperties(Consumer, {\n          Provider: {\n            get: function () {\n              if (!hasWarnedAboutUsingConsumerProvider) {\n                hasWarnedAboutUsingConsumerProvider = true;\n                error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n              }\n\n              return context.Provider;\n            },\n            set: function (_Provider) {\n              context.Provider = _Provider;\n            }\n          },\n          _currentValue: {\n            get: function () {\n              return context._currentValue;\n            },\n            set: function (_currentValue) {\n              context._currentValue = _currentValue;\n            }\n          },\n          _currentValue2: {\n            get: function () {\n              return context._currentValue2;\n            },\n            set: function (_currentValue2) {\n              context._currentValue2 = _currentValue2;\n            }\n          },\n          _threadCount: {\n            get: function () {\n              return context._threadCount;\n            },\n            set: function (_threadCount) {\n              context._threadCount = _threadCount;\n            }\n          },\n          Consumer: {\n            get: function () {\n              if (!hasWarnedAboutUsingNestedContextConsumers) {\n                hasWarnedAboutUsingNestedContextConsumers = true;\n                error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n              }\n\n              return context.Consumer;\n            }\n          },\n          displayName: {\n            get: function () {\n              return context.displayName;\n            },\n            set: function (displayName) {\n              if (!hasWarnedAboutDisplayNameOnConsumer) {\n                warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n                hasWarnedAboutDisplayNameOnConsumer = true;\n              }\n            }\n          }\n        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n        context.Consumer = Consumer;\n      }\n      {\n        context._currentRenderer = null;\n        context._currentRenderer2 = null;\n      }\n      return context;\n    }\n\n    var Uninitialized = -1;\n    var Pending = 0;\n    var Resolved = 1;\n    var Rejected = 2;\n\n    function lazyInitializer(payload) {\n      if (payload._status === Uninitialized) {\n        var ctor = payload._result;\n        var thenable = ctor(); // Transition to the next state.\n        // This might throw either because it's missing or throws. If so, we treat it\n        // as still uninitialized and try again next time. Which is the same as what\n        // happens if the ctor or any wrappers processing the ctor throws. This might\n        // end up fixing it if the resolution was a concurrency bug.\n\n        thenable.then(function (moduleObject) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var resolved = payload;\n            resolved._status = Resolved;\n            resolved._result = moduleObject;\n          }\n        }, function (error) {\n          if (payload._status === Pending || payload._status === Uninitialized) {\n            // Transition to the next state.\n            var rejected = payload;\n            rejected._status = Rejected;\n            rejected._result = error;\n          }\n        });\n\n        if (payload._status === Uninitialized) {\n          // In case, we're still uninitialized, then we're waiting for the thenable\n          // to resolve. Set it as pending in the meantime.\n          var pending = payload;\n          pending._status = Pending;\n          pending._result = thenable;\n        }\n      }\n\n      if (payload._status === Resolved) {\n        var moduleObject = payload._result;\n        {\n          if (moduleObject === undefined) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n          }\n        }\n        {\n          if (!('default' in moduleObject)) {\n            error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n            'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n          }\n        }\n        return moduleObject.default;\n      } else {\n        throw payload._result;\n      }\n    }\n\n    function lazy(ctor) {\n      var payload = {\n        // We use these fields to store the result.\n        _status: Uninitialized,\n        _result: ctor\n      };\n      var lazyType = {\n        $$typeof: REACT_LAZY_TYPE,\n        _payload: payload,\n        _init: lazyInitializer\n      };\n      {\n        // In production, this would just set it on the object.\n        var defaultProps;\n        var propTypes; // $FlowFixMe\n\n        Object.defineProperties(lazyType, {\n          defaultProps: {\n            configurable: true,\n            get: function () {\n              return defaultProps;\n            },\n            set: function (newDefaultProps) {\n              error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              defaultProps = newDefaultProps; // Match production behavior more closely:\n              // $FlowFixMe\n\n              Object.defineProperty(lazyType, 'defaultProps', {\n                enumerable: true\n              });\n            }\n          },\n          propTypes: {\n            configurable: true,\n            get: function () {\n              return propTypes;\n            },\n            set: function (newPropTypes) {\n              error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n              propTypes = newPropTypes; // Match production behavior more closely:\n              // $FlowFixMe\n\n              Object.defineProperty(lazyType, 'propTypes', {\n                enumerable: true\n              });\n            }\n          }\n        });\n      }\n      return lazyType;\n    }\n\n    function forwardRef(render) {\n      {\n        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n        } else if (typeof render !== 'function') {\n          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n        } else {\n          if (render.length !== 0 && render.length !== 2) {\n            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n          }\n        }\n\n        if (render != null) {\n          if (render.defaultProps != null || render.propTypes != null) {\n            error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n          }\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.forwardRef((props, ref) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!render.name && !render.displayName) {\n              render.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n\n    var REACT_MODULE_REFERENCE;\n    {\n      REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n    }\n\n    function isValidElementType(type) {\n      if (typeof type === 'string' || typeof type === 'function') {\n        return true;\n      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n      if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n        return true;\n      }\n\n      if (typeof type === 'object' && type !== null) {\n        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n        // types supported by any Flight configuration anywhere since\n        // we don't know which Flight build this will end up being used\n        // with.\n        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    function memo(type, compare) {\n      {\n        if (!isValidElementType(type)) {\n          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n        }\n      }\n      var elementType = {\n        $$typeof: REACT_MEMO_TYPE,\n        type: type,\n        compare: compare === undefined ? null : compare\n      };\n      {\n        var ownName;\n        Object.defineProperty(elementType, 'displayName', {\n          enumerable: false,\n          configurable: true,\n          get: function () {\n            return ownName;\n          },\n          set: function (name) {\n            ownName = name; // The inner component shouldn't inherit this display name in most cases,\n            // because the component may be used elsewhere.\n            // But it's nice for anonymous functions to inherit the name,\n            // so that our component-stack generation logic will display their frames.\n            // An anonymous function generally suggests a pattern like:\n            //   React.memo((props) => {...});\n            // This kind of inner function is not used elsewhere so the side effect is okay.\n\n            if (!type.name && !type.displayName) {\n              type.displayName = name;\n            }\n          }\n        });\n      }\n      return elementType;\n    }\n\n    function resolveDispatcher() {\n      var dispatcher = ReactCurrentDispatcher.current;\n      {\n        if (dispatcher === null) {\n          error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n        }\n      } // Will result in a null access error if accessed outside render phase. We\n      // intentionally don't throw our own error because this is in a hot path.\n      // Also helps ensure this is inlined.\n\n      return dispatcher;\n    }\n\n    function useContext(Context) {\n      var dispatcher = resolveDispatcher();\n      {\n        // TODO: add a more generic warning for invalid values.\n        if (Context._context !== undefined) {\n          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n          // and nobody should be using this in existing code.\n\n          if (realContext.Consumer === Context) {\n            error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n          } else if (realContext.Provider === Context) {\n            error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n          }\n        }\n      }\n      return dispatcher.useContext(Context);\n    }\n\n    function useState(initialState) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useState(initialState);\n    }\n\n    function useReducer(reducer, initialArg, init) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useReducer(reducer, initialArg, init);\n    }\n\n    function useRef(initialValue) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useRef(initialValue);\n    }\n\n    function useEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useEffect(create, deps);\n    }\n\n    function useInsertionEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useInsertionEffect(create, deps);\n    }\n\n    function useLayoutEffect(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useLayoutEffect(create, deps);\n    }\n\n    function useCallback(callback, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useCallback(callback, deps);\n    }\n\n    function useMemo(create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useMemo(create, deps);\n    }\n\n    function useImperativeHandle(ref, create, deps) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useImperativeHandle(ref, create, deps);\n    }\n\n    function useDebugValue(value, formatterFn) {\n      {\n        var dispatcher = resolveDispatcher();\n        return dispatcher.useDebugValue(value, formatterFn);\n      }\n    }\n\n    function useTransition() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useTransition();\n    }\n\n    function useDeferredValue(value) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useDeferredValue(value);\n    }\n\n    function useId() {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useId();\n    }\n\n    function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n      var dispatcher = resolveDispatcher();\n      return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n    } // Helpers to patch console.logs to avoid logging during side-effect free\n    // replaying on render function. This currently only patches the object\n    // lazily which won't cover if the log function was extracted eagerly.\n    // We could also eagerly patch the method.\n\n\n    var disabledDepth = 0;\n    var prevLog;\n    var prevInfo;\n    var prevWarn;\n    var prevError;\n    var prevGroup;\n    var prevGroupCollapsed;\n    var prevGroupEnd;\n\n    function disabledLog() {}\n\n    disabledLog.__reactDisabledLog = true;\n\n    function disableLogs() {\n      {\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          prevLog = console.log;\n          prevInfo = console.info;\n          prevWarn = console.warn;\n          prevError = console.error;\n          prevGroup = console.group;\n          prevGroupCollapsed = console.groupCollapsed;\n          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n          var props = {\n            configurable: true,\n            enumerable: true,\n            value: disabledLog,\n            writable: true\n          }; // $FlowFixMe Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            info: props,\n            log: props,\n            warn: props,\n            error: props,\n            group: props,\n            groupCollapsed: props,\n            groupEnd: props\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        disabledDepth++;\n      }\n    }\n\n    function reenableLogs() {\n      {\n        disabledDepth--;\n\n        if (disabledDepth === 0) {\n          /* eslint-disable react-internal/no-production-logging */\n          var props = {\n            configurable: true,\n            enumerable: true,\n            writable: true\n          }; // $FlowFixMe Flow thinks console is immutable.\n\n          Object.defineProperties(console, {\n            log: assign({}, props, {\n              value: prevLog\n            }),\n            info: assign({}, props, {\n              value: prevInfo\n            }),\n            warn: assign({}, props, {\n              value: prevWarn\n            }),\n            error: assign({}, props, {\n              value: prevError\n            }),\n            group: assign({}, props, {\n              value: prevGroup\n            }),\n            groupCollapsed: assign({}, props, {\n              value: prevGroupCollapsed\n            }),\n            groupEnd: assign({}, props, {\n              value: prevGroupEnd\n            })\n          });\n          /* eslint-enable react-internal/no-production-logging */\n        }\n\n        if (disabledDepth < 0) {\n          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n        }\n      }\n    }\n\n    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n    var prefix;\n\n    function describeBuiltInComponentFrame(name, source, ownerFn) {\n      {\n        if (prefix === undefined) {\n          // Extract the VM specific prefix used by each line.\n          try {\n            throw Error();\n          } catch (x) {\n            var match = x.stack.trim().match(/\\n( *(at )?)/);\n            prefix = match && match[1] || '';\n          }\n        } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n        return '\\n' + prefix + name;\n      }\n    }\n\n    var reentry = false;\n    var componentFrameCache;\n    {\n      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n      componentFrameCache = new PossiblyWeakMap();\n    }\n\n    function describeNativeComponentFrame(fn, construct) {\n      // If something asked for a stack inside a fake render, it should get ignored.\n      if (!fn || reentry) {\n        return '';\n      }\n\n      {\n        var frame = componentFrameCache.get(fn);\n\n        if (frame !== undefined) {\n          return frame;\n        }\n      }\n      var control;\n      reentry = true;\n      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n      Error.prepareStackTrace = undefined;\n      var previousDispatcher;\n      {\n        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n        // for warnings.\n\n        ReactCurrentDispatcher$1.current = null;\n        disableLogs();\n      }\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            }\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          }\n\n          fn();\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          // This extracts the first frame from the sample that isn't also in the control.\n          // Skipping one frame that we assume is the frame that calls the two.\n          var sampleLines = sample.stack.split('\\n');\n          var controlLines = control.stack.split('\\n');\n          var s = sampleLines.length - 1;\n          var c = controlLines.length - 1;\n\n          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n            // We expect at least one stack frame to be shared.\n            // Typically this will be the root most one. However, stack frames may be\n            // cut off due to maximum stack limits. In this case, one maybe cut off\n            // earlier than the other. We assume that the sample is longer or the same\n            // and there for cut off earlier. So we should find the root most frame in\n            // the sample somewhere in the control.\n            c--;\n          }\n\n          for (; s >= 1 && c >= 0; s--, c--) {\n            // Next we find the first one that isn't the same which should be the\n            // frame that called our sample function and the control.\n            if (sampleLines[s] !== controlLines[c]) {\n              // In V8, the first line is describing the message but other VMs don't.\n              // If we're about to return the first line, and the control is also on the same\n              // line, that's a pretty good indicator that our sample threw at same line as\n              // the control. I.e. before we entered the sample frame. So we ignore this result.\n              // This can happen if you passed a class to function component, or non-function.\n              if (s !== 1 || c !== 1) {\n                do {\n                  s--;\n                  c--; // We may still have similar intermediate frames from the construct call.\n                  // The next one that isn't the same should be our match though.\n\n                  if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                    // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                    var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                    // but we have a user-provided \"displayName\"\n                    // splice it in to make the stack more readable.\n\n\n                    if (fn.displayName && _frame.includes('<anonymous>')) {\n                      _frame = _frame.replace('<anonymous>', fn.displayName);\n                    }\n\n                    {\n                      if (typeof fn === 'function') {\n                        componentFrameCache.set(fn, _frame);\n                      }\n                    } // Return the line we found.\n\n                    return _frame;\n                  }\n                } while (s >= 1 && c >= 0);\n              }\n\n              break;\n            }\n          }\n        }\n      } finally {\n        reentry = false;\n        {\n          ReactCurrentDispatcher$1.current = previousDispatcher;\n          reenableLogs();\n        }\n        Error.prepareStackTrace = previousPrepareStackTrace;\n      } // Fallback to just using the name if we couldn't make it throw.\n\n\n      var name = fn ? fn.displayName || fn.name : '';\n      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n      {\n        if (typeof fn === 'function') {\n          componentFrameCache.set(fn, syntheticFrame);\n        }\n      }\n      return syntheticFrame;\n    }\n\n    function describeFunctionComponentFrame(fn, source, ownerFn) {\n      {\n        return describeNativeComponentFrame(fn, false);\n      }\n    }\n\n    function shouldConstruct(Component) {\n      var prototype = Component.prototype;\n      return !!(prototype && prototype.isReactComponent);\n    }\n\n    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n      if (type == null) {\n        return '';\n      }\n\n      if (typeof type === 'function') {\n        {\n          return describeNativeComponentFrame(type, shouldConstruct(type));\n        }\n      }\n\n      if (typeof type === 'string') {\n        return describeBuiltInComponentFrame(type);\n      }\n\n      switch (type) {\n        case REACT_SUSPENSE_TYPE:\n          return describeBuiltInComponentFrame('Suspense');\n\n        case REACT_SUSPENSE_LIST_TYPE:\n          return describeBuiltInComponentFrame('SuspenseList');\n      }\n\n      if (typeof type === 'object') {\n        switch (type.$$typeof) {\n          case REACT_FORWARD_REF_TYPE:\n            return describeFunctionComponentFrame(type.render);\n\n          case REACT_MEMO_TYPE:\n            // Memo may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n          case REACT_LAZY_TYPE:\n            {\n              var lazyComponent = type;\n              var payload = lazyComponent._payload;\n              var init = lazyComponent._init;\n\n              try {\n                // Lazy may contain any component type so we recursively resolve it.\n                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n              } catch (x) {}\n            }\n        }\n      }\n\n      return '';\n    }\n\n    var loggedTypeFailures = {};\n    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\n    function setCurrentlyValidatingElement(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n        } else {\n          ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n        }\n      }\n    }\n\n    function checkPropTypes(typeSpecs, values, location, componentName, element) {\n      {\n        // $FlowFixMe This is okay but Flow doesn't know it.\n        var has = Function.call.bind(hasOwnProperty);\n\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                // eslint-disable-next-line react-internal/prod-error-codes\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n\n              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n            } catch (ex) {\n              error$1 = ex;\n            }\n\n            if (error$1 && !(error$1 instanceof Error)) {\n              setCurrentlyValidatingElement(element);\n              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n              setCurrentlyValidatingElement(null);\n            }\n\n            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error$1.message] = true;\n              setCurrentlyValidatingElement(element);\n              error('Failed %s type: %s', location, error$1.message);\n              setCurrentlyValidatingElement(null);\n            }\n          }\n        }\n      }\n    }\n\n    function setCurrentlyValidatingElement$1(element) {\n      {\n        if (element) {\n          var owner = element._owner;\n          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n          setExtraStackFrame(stack);\n        } else {\n          setExtraStackFrame(null);\n        }\n      }\n    }\n\n    var propTypesMisspellWarningShown;\n    {\n      propTypesMisspellWarningShown = false;\n    }\n\n    function getDeclarationErrorAddendum() {\n      if (ReactCurrentOwner.current) {\n        var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n        if (name) {\n          return '\\n\\nCheck the render method of `' + name + '`.';\n        }\n      }\n\n      return '';\n    }\n\n    function getSourceInfoErrorAddendum(source) {\n      if (source !== undefined) {\n        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n        var lineNumber = source.lineNumber;\n        return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n      }\n\n      return '';\n    }\n\n    function getSourceInfoErrorAddendumForProps(elementProps) {\n      if (elementProps !== null && elementProps !== undefined) {\n        return getSourceInfoErrorAddendum(elementProps.__source);\n      }\n\n      return '';\n    }\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n\n\n    var ownerHasKeyUseWarning = {};\n\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = getDeclarationErrorAddendum();\n\n      if (!info) {\n        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n        if (parentName) {\n          info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n        }\n      }\n\n      return info;\n    }\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n\n    function validateExplicitKey(element, parentType) {\n      if (!element._store || element._store.validated || element.key != null) {\n        return;\n      }\n\n      element._store.validated = true;\n      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n        return;\n      }\n\n      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n      // property, it may be the creator of the child that's responsible for\n      // assigning it a key.\n\n      var childOwner = '';\n\n      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n        // Give the component that originally created this child.\n        childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n      }\n\n      {\n        setCurrentlyValidatingElement$1(element);\n        error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n        setCurrentlyValidatingElement$1(null);\n      }\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n\n    function validateChildKeys(node, parentType) {\n      if (typeof node !== 'object') {\n        return;\n      }\n\n      if (isArray(node)) {\n        for (var i = 0; i < node.length; i++) {\n          var child = node[i];\n\n          if (isValidElement(child)) {\n            validateExplicitKey(child, parentType);\n          }\n        }\n      } else if (isValidElement(node)) {\n        // This element was passed in a valid location.\n        if (node._store) {\n          node._store.validated = true;\n        }\n      } else if (node) {\n        var iteratorFn = getIteratorFn(node);\n\n        if (typeof iteratorFn === 'function') {\n          // Entry iterators used to provide implicit keys,\n          // but now we print a separate warning for them later.\n          if (iteratorFn !== node.entries) {\n            var iterator = iteratorFn.call(node);\n            var step;\n\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n\n\n    function validatePropTypes(element) {\n      {\n        var type = element.type;\n\n        if (type === null || type === undefined || typeof type === 'string') {\n          return;\n        }\n\n        var propTypes;\n\n        if (typeof type === 'function') {\n          propTypes = type.propTypes;\n        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        type.$$typeof === REACT_MEMO_TYPE)) {\n          propTypes = type.propTypes;\n        } else {\n          return;\n        }\n\n        if (propTypes) {\n          // Intentionally inside to avoid triggering lazy initializers:\n          var name = getComponentNameFromType(type);\n          checkPropTypes(propTypes, element.props, 'prop', name, element);\n        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n          var _name = getComponentNameFromType(type);\n\n          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n        }\n\n        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n        }\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n\n    function validateFragmentProps(fragment) {\n      {\n        var keys = Object.keys(fragment.props);\n\n        for (var i = 0; i < keys.length; i++) {\n          var key = keys[i];\n\n          if (key !== 'children' && key !== 'key') {\n            setCurrentlyValidatingElement$1(fragment);\n            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n            setCurrentlyValidatingElement$1(null);\n            break;\n          }\n        }\n\n        if (fragment.ref !== null) {\n          setCurrentlyValidatingElement$1(fragment);\n          error('Invalid attribute `ref` supplied to `React.Fragment`.');\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n\n    function createElementWithValidation(type, props, children) {\n      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n\n      if (!validType) {\n        var info = '';\n\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n        }\n\n        var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n\n        var typeString;\n\n        if (type === null) {\n          typeString = 'null';\n        } else if (isArray(type)) {\n          typeString = 'array';\n        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n          typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n          info = ' Did you accidentally export a JSX literal instead of a component?';\n        } else {\n          typeString = typeof type;\n        }\n\n        {\n          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n        }\n      }\n\n      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n      // TODO: Drop this when these are no longer allowed as the type argument.\n\n      if (element == null) {\n        return element;\n      } // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing errors.\n      // We don't want exception behavior to differ between dev and prod.\n      // (Rendering will throw with a helpful message and as soon as the type is\n      // fixed, the key warnings will appear.)\n\n\n      if (validType) {\n        for (var i = 2; i < arguments.length; i++) {\n          validateChildKeys(arguments[i], type);\n        }\n      }\n\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      } else {\n        validatePropTypes(element);\n      }\n\n      return element;\n    }\n\n    var didWarnAboutDeprecatedCreateFactory = false;\n\n    function createFactoryWithValidation(type) {\n      var validatedFactory = createElementWithValidation.bind(null, type);\n      validatedFactory.type = type;\n      {\n        if (!didWarnAboutDeprecatedCreateFactory) {\n          didWarnAboutDeprecatedCreateFactory = true;\n          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n        } // Legacy hook: remove it\n\n\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return validatedFactory;\n    }\n\n    function cloneElementWithValidation(element, props, children) {\n      var newElement = cloneElement.apply(this, arguments);\n\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], newElement.type);\n      }\n\n      validatePropTypes(newElement);\n      return newElement;\n    }\n\n    function startTransition(scope, options) {\n      var prevTransition = ReactCurrentBatchConfig.transition;\n      ReactCurrentBatchConfig.transition = {};\n      var currentTransition = ReactCurrentBatchConfig.transition;\n      {\n        ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n      }\n\n      try {\n        scope();\n      } finally {\n        ReactCurrentBatchConfig.transition = prevTransition;\n        {\n          if (prevTransition === null && currentTransition._updatedFibers) {\n            var updatedFibersCount = currentTransition._updatedFibers.size;\n\n            if (updatedFibersCount > 10) {\n              warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n            }\n\n            currentTransition._updatedFibers.clear();\n          }\n        }\n      }\n    }\n\n    var didWarnAboutMessageChannel = false;\n    var enqueueTaskImpl = null;\n\n    function enqueueTask(task) {\n      if (enqueueTaskImpl === null) {\n        try {\n          // read require off the module object to get around the bundlers.\n          // we don't want them to detect a require and bundle a Node polyfill.\n          var requireString = ('require' + Math.random()).slice(0, 7);\n          var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n          // version of setImmediate, bypassing fake timers if any.\n\n          enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n        } catch (_err) {\n          // we're in a browser\n          // we can't use regular timers because they may still be faked\n          // so we try MessageChannel+postMessage instead\n          enqueueTaskImpl = function (callback) {\n            {\n              if (didWarnAboutMessageChannel === false) {\n                didWarnAboutMessageChannel = true;\n\n                if (typeof MessageChannel === 'undefined') {\n                  error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n                }\n              }\n            }\n            var channel = new MessageChannel();\n            channel.port1.onmessage = callback;\n            channel.port2.postMessage(undefined);\n          };\n        }\n      }\n\n      return enqueueTaskImpl(task);\n    }\n\n    var actScopeDepth = 0;\n    var didWarnNoAwaitAct = false;\n\n    function act(callback) {\n      {\n        // `act` calls can be nested, so we track the depth. This represents the\n        // number of `act` scopes on the stack.\n        var prevActScopeDepth = actScopeDepth;\n        actScopeDepth++;\n\n        if (ReactCurrentActQueue.current === null) {\n          // This is the outermost `act` scope. Initialize the queue. The reconciler\n          // will detect the queue and use it instead of Scheduler.\n          ReactCurrentActQueue.current = [];\n        }\n\n        var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n        var result;\n\n        try {\n          // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n          // set to `true` while the given callback is executed, not for updates\n          // triggered during an async event, because this is how the legacy\n          // implementation of `act` behaved.\n          ReactCurrentActQueue.isBatchingLegacy = true;\n          result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n          // which flushed updates immediately after the scope function exits, even\n          // if it's an async function.\n\n          if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n            var queue = ReactCurrentActQueue.current;\n\n            if (queue !== null) {\n              ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n              flushActQueue(queue);\n            }\n          }\n        } catch (error) {\n          popActScope(prevActScopeDepth);\n          throw error;\n        } finally {\n          ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n        }\n\n        if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n          var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n          // for it to resolve before exiting the current scope.\n\n          var wasAwaited = false;\n          var thenable = {\n            then: function (resolve, reject) {\n              wasAwaited = true;\n              thenableResult.then(function (returnValue) {\n                popActScope(prevActScopeDepth);\n\n                if (actScopeDepth === 0) {\n                  // We've exited the outermost act scope. Recursively flush the\n                  // queue until there's no remaining work.\n                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                } else {\n                  resolve(returnValue);\n                }\n              }, function (error) {\n                // The callback threw an error.\n                popActScope(prevActScopeDepth);\n                reject(error);\n              });\n            }\n          };\n          {\n            if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n              // eslint-disable-next-line no-undef\n              Promise.resolve().then(function () {}).then(function () {\n                if (!wasAwaited) {\n                  didWarnNoAwaitAct = true;\n                  error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n                }\n              });\n            }\n          }\n          return thenable;\n        } else {\n          var returnValue = result; // The callback is not an async function. Exit the current scope\n          // immediately, without awaiting.\n\n          popActScope(prevActScopeDepth);\n\n          if (actScopeDepth === 0) {\n            // Exiting the outermost act scope. Flush the queue.\n            var _queue = ReactCurrentActQueue.current;\n\n            if (_queue !== null) {\n              flushActQueue(_queue);\n              ReactCurrentActQueue.current = null;\n            } // Return a thenable. If the user awaits it, we'll flush again in\n            // case additional work was scheduled by a microtask.\n\n\n            var _thenable = {\n              then: function (resolve, reject) {\n                // Confirm we haven't re-entered another `act` scope, in case\n                // the user does something weird like await the thenable\n                // multiple times.\n                if (ReactCurrentActQueue.current === null) {\n                  // Recursively flush the queue until there's no remaining work.\n                  ReactCurrentActQueue.current = [];\n                  recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                } else {\n                  resolve(returnValue);\n                }\n              }\n            };\n            return _thenable;\n          } else {\n            // Since we're inside a nested `act` scope, the returned thenable\n            // immediately resolves. The outer scope will flush the queue.\n            var _thenable2 = {\n              then: function (resolve, reject) {\n                resolve(returnValue);\n              }\n            };\n            return _thenable2;\n          }\n        }\n      }\n    }\n\n    function popActScope(prevActScopeDepth) {\n      {\n        if (prevActScopeDepth !== actScopeDepth - 1) {\n          error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n        }\n\n        actScopeDepth = prevActScopeDepth;\n      }\n    }\n\n    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n      {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          try {\n            flushActQueue(queue);\n            enqueueTask(function () {\n              if (queue.length === 0) {\n                // No additional work was scheduled. Finish.\n                ReactCurrentActQueue.current = null;\n                resolve(returnValue);\n              } else {\n                // Keep flushing work until there's none left.\n                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n              }\n            });\n          } catch (error) {\n            reject(error);\n          }\n        } else {\n          resolve(returnValue);\n        }\n      }\n    }\n\n    var isFlushing = false;\n\n    function flushActQueue(queue) {\n      {\n        if (!isFlushing) {\n          // Prevent re-entrance.\n          isFlushing = true;\n          var i = 0;\n\n          try {\n            for (; i < queue.length; i++) {\n              var callback = queue[i];\n\n              do {\n                callback = callback(true);\n              } while (callback !== null);\n            }\n\n            queue.length = 0;\n          } catch (error) {\n            // If something throws, leave the remaining callbacks on the queue.\n            queue = queue.slice(i + 1);\n            throw error;\n          } finally {\n            isFlushing = false;\n          }\n        }\n      }\n    }\n\n    var createElement$1 = createElementWithValidation;\n    var cloneElement$1 = cloneElementWithValidation;\n    var createFactory = createFactoryWithValidation;\n    var Children = {\n      map: mapChildren,\n      forEach: forEachChildren,\n      count: countChildren,\n      toArray: toArray,\n      only: onlyChild\n    };\n    exports.Children = Children;\n    exports.Component = Component;\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.Profiler = REACT_PROFILER_TYPE;\n    exports.PureComponent = PureComponent;\n    exports.StrictMode = REACT_STRICT_MODE_TYPE;\n    exports.Suspense = REACT_SUSPENSE_TYPE;\n    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n    exports.cloneElement = cloneElement$1;\n    exports.createContext = createContext;\n    exports.createElement = createElement$1;\n    exports.createFactory = createFactory;\n    exports.createRef = createRef;\n    exports.forwardRef = forwardRef;\n    exports.isValidElement = isValidElement;\n    exports.lazy = lazy;\n    exports.memo = memo;\n    exports.startTransition = startTransition;\n    exports.unstable_act = act;\n    exports.useCallback = useCallback;\n    exports.useContext = useContext;\n    exports.useDebugValue = useDebugValue;\n    exports.useDeferredValue = useDeferredValue;\n    exports.useEffect = useEffect;\n    exports.useId = useId;\n    exports.useImperativeHandle = useImperativeHandle;\n    exports.useInsertionEffect = useInsertionEffect;\n    exports.useLayoutEffect = useLayoutEffect;\n    exports.useMemo = useMemo;\n    exports.useReducer = useReducer;\n    exports.useRef = useRef;\n    exports.useState = useState;\n    exports.useSyncExternalStore = useSyncExternalStore;\n    exports.useTransition = useTransition;\n    exports.version = ReactVersion;\n    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === 'function') {\n      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n    }\n  })();\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/GOIT/React/1 неделя/goit-react-hw-01-components/node_modules/react/cjs/react.development.js"],"names":["process","env","NODE_ENV","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","ReactVersion","enableScopeAPI","enableCacheElement","enableTransitionTracing","enableLegacyHidden","enableDebugTracing","REACT_ELEMENT_TYPE","Symbol","for","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_OFFSCREEN_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","ReactCurrentDispatcher","current","ReactCurrentBatchConfig","transition","ReactCurrentActQueue","isBatchingLegacy","didScheduleLegacyUpdate","ReactCurrentOwner","ReactDebugCurrentFrame","currentExtraStackFrame","setExtraStackFrame","stack","getCurrentStack","getStackAddendum","impl","ReactSharedInternals","warn","format","_len","arguments","length","args","Array","_key","printWarning","error","_len2","_key2","level","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","assign","Object","emptyObject","freeze","Component","props","context","updater","refs","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","undefined","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","seal","isArrayImpl","isArray","a","typeName","value","hasToStringTag","toStringTag","type","willCoercionThrow","testStringCoercion","e","checkKeyStringCoercion","getWrappedName","outerType","innerType","wrapperName","functionName","getContextName","getComponentNameFromType","tag","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","didWarnAboutStringRefs","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","warnIfStringRefCannotBeAutoConverted","stateNode","ReactElement","self","source","owner","element","_owner","_store","enumerable","writable","createElement","children","propName","childrenLength","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","replace","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","getElementKey","index","toString","mapIntoArray","array","escapedPrefix","nameSoFar","invokeCallback","_child","mappedChild","childKey","escapedChildKey","c","push","child","nextName","subtreeCount","nextNamePrefix","iteratorFn","iterableChildren","entries","step","ii","next","done","childrenString","keys","join","mapChildren","func","result","count","countChildren","n","forEachChildren","forEachFunc","forEachContext","toArray","onlyChild","createContext","defaultValue","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","hasWarnedAboutUsingNestedContextConsumers","hasWarnedAboutUsingConsumerProvider","hasWarnedAboutDisplayNameOnConsumer","defineProperties","set","_Provider","_currentRenderer","_currentRenderer2","Uninitialized","Pending","Resolved","Rejected","lazyInitializer","_status","ctor","_result","thenable","then","moduleObject","resolved","rejected","pending","default","lazy","lazyType","propTypes","newDefaultProps","newPropTypes","forwardRef","elementType","ownName","REACT_MODULE_REFERENCE","isValidElementType","getModuleId","memo","compare","resolveDispatcher","dispatcher","useContext","Context","realContext","useState","initialState","useReducer","reducer","initialArg","useRef","initialValue","useEffect","create","deps","useInsertionEffect","useLayoutEffect","useCallback","useMemo","useImperativeHandle","useDebugValue","formatterFn","useTransition","useDeferredValue","useId","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","log","group","groupCollapsed","groupEnd","reenableLogs","ReactCurrentDispatcher$1","prefix","describeBuiltInComponentFrame","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","Reflect","sample","sampleLines","split","controlLines","s","_frame","includes","syntheticFrame","describeFunctionComponentFrame","shouldConstruct","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","ReactDebugCurrentFrame$1","setCurrentlyValidatingElement","checkPropTypes","typeSpecs","values","location","has","bind","typeSpecName","error$1","err","ex","message","setCurrentlyValidatingElement$1","propTypesMisspellWarningShown","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","fileName","lineNumber","getSourceInfoErrorAddendumForProps","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","PropTypes","_name","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","sourceInfo","typeString","didWarnAboutDeprecatedCreateFactory","createFactoryWithValidation","validatedFactory","cloneElementWithValidation","startTransition","scope","options","prevTransition","currentTransition","_updatedFibers","Set","updatedFibersCount","size","clear","didWarnAboutMessageChannel","enqueueTaskImpl","enqueueTask","task","requireString","Math","random","slice","nodeRequire","module","setImmediate","_err","MessageChannel","channel","port1","onmessage","port2","postMessage","actScopeDepth","didWarnNoAwaitAct","act","prevActScopeDepth","prevIsBatchingLegacy","queue","flushActQueue","popActScope","thenableResult","wasAwaited","resolve","reject","returnValue","recursivelyFlushAsyncActWork","Promise","_queue","_thenable","_thenable2","isFlushing","createElement$1","cloneElement$1","createFactory","Children","forEach","only","exports","Fragment","Profiler","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","unstable_act","version","registerInternalModuleStop"],"mappings":"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","sourcesContent":["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.1.0';\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\n// ATTENTION\n\nvar REACT_ELEMENT_TYPE =  Symbol.for('react.element');\nvar REACT_PORTAL_TYPE =  Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE =  Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE =  Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE =  Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE =  Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE =  Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE =  Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE =  Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE =  Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE =  Symbol.for('react.memo');\nvar REACT_LAZY_TYPE =  Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE =  Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL =  Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n"]},"metadata":{},"sourceType":"script"}